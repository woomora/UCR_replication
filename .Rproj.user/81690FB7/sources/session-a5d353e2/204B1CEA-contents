# Workplace ----
rm(list = ls())
pacman::p_load(tidyverse, haven, readstata13, lubridate, tidymodels, SuperLearner)
setwd("~/Dropbox/Data/LAPOP/Merges by country")
#grDevices::X11(type = "cairo")
select <- dplyr::select

lapop_merge <- tibble(read.dta13("/Users/billywoom/Dropbox/Data/LAPOP/2004-2018 LAPOP AmericasBarometer Merge (v1.0w).dta"))
  

lapop <- tibble()
#
# PPP rates ----
ppp <- 
  read_csv("~/Dropbox/Data/PPP World Bank/API_PA.NUS.PPP_DS2_en_csv_v2_1927762.csv")

ppp <- 
ppp %>% 
  rename(pais = `Country Name`, countrycode = `Country Code`) %>% 
  select(-`Indicator Code`, -`Indicator Name`, -countrycode) %>% 
  pivot_longer(!pais, names_to = "year", values_to = "pppexrate") %>% 
  mutate(year = as.numeric(year)) %>% 
  left_join(
    ppp %>% 
      rename(pais = `Country Name`, countrycode = `Country Code`) %>%
      group_by(pais, countrycode) %>% 
      summarise() %>% 
      ungroup()
  ) %>% 
  filter(year >= 2012)

## Merges by country ----
## Countries with complete info from 2010-2019 ----
# Mexico ----
mex <- 
  tibble(read.dta13("Mexico LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  #filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog)),
    upm = as.numeric(upm)
  ) %>% 
  filter(year >= 2012)

table(mex$q10)
table(mex$q10new_12)
table(mex$q10new_14)
table(mex$q10new_16)
table(mex$q10new_18)

foo <- 
  mex %>% 
  mutate_at(vars(tidyselect::vars_select(names(mex), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(mex), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(mex), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(mex), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\$") %>%
  mutate(income = case_when(wave == 2012 ~ q10new_12,
                            wave == 2014 ~ q10new_14,
                            wave == 2016 ~ q10new_16,
                            wave == 2018 ~ q10new_18),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table(is.na(foo$income))
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

mex <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

mex <- 
  mex %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Mexico"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

summary(mex$income, na.rm = TRUE)
summary(mex$incomeppp, na.rm = TRUE)

plot(density(mex$incomeppp, na.rm = TRUE))

ineq::Gini((mex %>% filter(year==2012))$income)
ineq::Gini((mex %>% filter(year==2014))$income)
ineq::Gini((mex %>% filter(year==2016))$income)
ineq::Gini((mex %>% filter(year==2019))$income)

mex <- 
mex %>% 
  select(idnum, pais, wave, year, countrycode,
         estratopri, upm, wt, weight1500, strata, #municipal, municipio, municipio10,
         ur, tamano, idiomaq, fecha,
         sex, q2, ed, nationality, 
         edocivil,
         # q12, # Number of children
         # q12c, # Household size
         tam_hog,
         # q11, q11n, # Marital status 
         q3c, q3cn, # Religion
         income, incomeppp,
         colorr, # PERLA 
         etid, # Ethnicity
         leng1, leng4, # 
         r1, r3, r4, r4a, r5, r6, r7, r8, r12, r14, r15,  # Household assets
         ocup1a, ocup4a, ocupoit, # Ocupation status
         dis11, dis2, dis3, dis4, dis5, #dis11n, # Discrimination
         a1, a2, a3, www1, b1:b6, d1:d8, eff1:eff2, # Media and political opinions
         it1, m1, m2, #Interpersonal trust, Executiv and Congress approval
         pn4, # Satisfaction with Democracy
         ros4, # Preference for redistribution
         l1, # Political ideology
         ls3, # Life satisfaction
         pol1, # Political Interest 
         q5b, # Importance and religion,
         q10a, # Remittances
         q10e, # Income increased or decreased
         
         vb1, vb10, vb2, vb20, 
         colori, sexi, intid, inteval # Interviewer data
         ) %>% 
  mutate_if(is.character, as.factor)

mex <- 
mex %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Mexico") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(mex)

## Variable classes ----
variables <- 
lapop %>% 
  dplyr::summarise_all(class) %>% 
  tidyr::gather(variable, class)

table(variables$class)

variables_num <-   
variables %>% 
  filter(class == "numeric") %>% 
  select(variable)

variables_fct <-   
  variables %>% 
  filter(class == "factor") %>% 
  select(variable)

variables_int <-   
  variables %>% 
  filter(class == "integer") %>% 
  select(variable)

variables_date <-   
  variables %>% 
  filter(class == "Date") %>% 
  select(variable)

# Argentina ----
arg <- 
  tibble(read.dta13("Argentina LAPOP merge 2008-2019 v1.0_W.dta")) %>% 
  #sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
    
  )

table(arg$q10)
table(arg$q10new_12)
table(arg$q10new_14)
table(arg$q10new_16)
table(arg$q10new_18)

foo <- 
  arg %>% 
  mutate_at(vars(tidyselect::vars_select(names(arg), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(arg), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(arg), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(arg), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(arg), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table(is.na(foo$income))
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

arg <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

arg <- 
  arg %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Argentina"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(arg$income))
plot(density(arg$income, na.rm = TRUE))

ineq::Gini((arg %>% filter(year==2004))$income)
ineq::Gini((arg %>% filter(year==2006))$income)
ineq::Gini((arg %>% filter(year==2008))$income)
ineq::Gini((arg %>% filter(year==2010))$income)
ineq::Gini((arg %>% filter(year==2012))$income)
ineq::Gini((arg %>% filter(year==2014))$income)
ineq::Gini((arg %>% filter(year==2017))$income)
ineq::Gini((arg %>% filter(year==2019))$income)

arg <- 
  arg %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

arg <- 
  arg %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Argentina") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(arg)

# Bolivia ----
bol <- 
  tibble(read.dta13("Bolivia LAPOP merge 2004-2019 v1.0_W.dta")) %>%
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
    
  )

table(bol$q10)
table(bol$q10new_12)
table(bol$q10new_14)
table(bol$q10new_16)
table(bol$q10new_18)

foo <- 
  bol %>% 
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\$") %>%
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), str_replace, "a", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(bol), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table((foo$income))
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

bol <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

bol <- 
  bol %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Bolivia"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

summary(bol$income, na.rm = TRUE)
summary(bol$incomeppp, na.rm = TRUE)

plot(density(bol$incomeppp, na.rm = TRUE))

ineq::Gini((bol %>% filter(year==2004))$income)
ineq::Gini((bol %>% filter(year==2006))$income)
ineq::Gini((bol %>% filter(year==2008))$income)
ineq::Gini((bol %>% filter(year==2010))$income)
ineq::Gini((bol %>% filter(year==2012))$income)
ineq::Gini((bol %>% filter(year==2014))$income)
ineq::Gini((bol %>% filter(year==2017))$income)
ineq::Gini((bol %>% filter(year==2019))$income)


bol <- 
  bol %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

bol <- 
  bol %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Bolivia") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(bol)

# Brazil ----
bra <- 
  tibble(readstata13::read.dta13("Brazil LAPOP merge 2007-2019 v1.0_W.dta")) %>% 
  #tibble(read.dta13("Brazil LAPOP merge 2007-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010)%>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(bra$q10)

table(bra$q10new_12)
table(bra$q10g_12)

table(bra$q10new_14)
table(bra$q10new_16)
table(bra$q10new_18)

bra <- 
bra %>% 
  mutate(q10new_12 = q10g_12) %>% 
  mutate(q10 = case_when(q10 == "Sem Renda" ~ "Sem renda",
                         q10 == "Até R$ 510,00" ~ "Até R$510",
                         q10 == "De R$ 510,01 até R$ 1020,00" ~ "De R$ 510 até R$ 1020",
                         q10 == "De R$ 1020,01 até R$ 1.530,00" ~ "De R$ 1020 até R$ 1.530",
                         q10 == "De R$ 1.530,01 até R$ 2.550,00" ~ "De R$ 1.530 até R$ 2.550",
                         q10 == "De R$ 2.550,01 até R$ 3.570,00" ~ "De R$ 2.550 até R$ 3.570",
                         q10 == "De R$ 3.570,01 até R$ 4.080,00" ~ "De R$ 3.570 até R$ 4.080",
                         q10 == "De R$ 4.080,01 até R$ 6.120,00" ~ "De R$ 4.080 até R$ 6.120",
                         q10 == "De R$ 6.120,01até R$ 7.650,00" ~ "De R$ 6.120 até R$ 7.650",
                         q10 == "De R$ 7.650,01 até R$ 10.200,00" ~ "De R$ 7.650 até R$ 10.200",
                         q10 == "Mais de R$ 10.200,01" ~ "Mais de R$ 10.200",
                         q10 == "No Aplica" ~ "No Aplica",
                         q10 == "No se le preguntó en este país o año" ~ "No se le preguntó en este país o año"),
  )
  # mutate(q10new_12 = case_when(q10new_12 == 0 ~ "Sem renda",
  #                              q10new_12 == 1 ~ "Até R$100",
  #                              q10new_12 == 2 ~ "De R$100 até R$210",
  #                              q10new_12 == 3 ~ "De R$211 até R$310",
  #                              q10new_12 == 4 ~ "De R$311 até R$410",
  #                              q10new_12 == 5 ~ "De R$411 até R$520",
  #                              q10new_12 == 6 ~ "De R$521 até R$620",
  #                              q10new_12 == 7 ~ "De R$621 até R$730",
  #                              q10new_12 == 8 ~ "De R$731 até R$820",
  #                              q10new_12 == 9 ~ "De R$821 até R$930",
  #                              q10new_12 == 10 ~ "De R$931 até R$1040",
  #                              q10new_12 == 11 ~ "De R$1041 até R$1130",
  #                              q10new_12 == 12 ~ "De R$1131 até R$1240",
  #                              q10new_12 == 13 ~ "De R$1241 até R$1400",
  #                              q10new_12 == 14 ~ "De R$1401 até R$1550",
  #                              q10new_12 == 15 ~ "De R$1551 até R$1860",
  #                              q10new_12 == 16 ~ "Mais de R$1860",
  #                              ),
  # )

foo <- 
  bra %>% 
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), str_replace, "até", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), str_replace, "hasta", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(bra), starts_with('q10', ignore.case = TRUE))), str_replace, "to", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Mais de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         
         income = if_else(str_detect(income, "Menos de ") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Hasta") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Até") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = if_else(str_detect(income, "Sem Renda") == TRUE, "0", income),
         income = if_else(str_detect(income, "Sem renda") == TRUE, "0", income),
         
         
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"),
        
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Sem Renda") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  )
  # ) %>% 
  # filter(year == 2014) %>% 
  # select(income)

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))


bra <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

bra <- 
  bra %>% 
  mutate(pais = "Brazil") %>% 
  left_join(ppp %>% 
              filter(pais == "Brazil"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(bra$income))
summary(bra$income, na.rm = TRUE)
plot(density(bra$income, na.rm = TRUE))
plot(density((bra %>% filter(year==2010))$income, na.rm = TRUE))

ineq::Gini((bra %>% filter(year==2007))$income)
ineq::Gini((bra %>% filter(year==2008))$income)
ineq::Gini((bra %>% filter(year==2010))$income)
ineq::Gini((bra %>% filter(year==2012))$income)
ineq::Gini((bra %>% filter(year==2014))$income)
ineq::Gini((bra %>% filter(year==2017))$income)
ineq::Gini((bra %>% filter(year==2019))$income)

bra <- 
  bra %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

bra <- 
  bra %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Brazil") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(bra)

# Chile ----
chl <- 
  tibble(read.dta13("Chile LAPOP merge 2006-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(chl$q10)
table(chl$q10new_12)
table(chl$q10new_14)
table(chl$q10new_16)
table(chl$q10new_18)

foo <- 
  chl %>% 
  mutate_at(vars(tidyselect::vars_select(names(chl), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(chl), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(chl), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(chl), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(chl), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

chl <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

chl <- 
  chl %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Chile"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(chl$income))
summary(chl$income, na.rm =TRUE)
plot(density(chl$income, na.rm = TRUE))

ineq::Gini((chl %>% filter(year==2010))$income)
ineq::Gini((chl %>% filter(year==2012))$income)
ineq::Gini((chl %>% filter(year==2014))$income)
ineq::Gini((chl %>% filter(year==2017))$income)
ineq::Gini((chl %>% filter(year==2019))$income)

chl <- 
  chl %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

chl <- 
  chl %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Chile") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )


lapop <- 
  lapop %>%
  bind_rows(chl)

# Colombia ----
col <- 
  tibble(readstata13::read.dta13("Colombia LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  # tibble(read.dta13("Colombia LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
    
  )

table(col$q10)
table(col$q10new_12)
table(col$q10new_14)
table(col$q10new_16)
table(col$q10new_18)

col <- 
  col %>% 
  mutate(q10new_12 = case_when(q10new_12 == 0 ~ "Ningún ingreso",
                               q10new_12 == 1 ~ "Menos de 90.000",
                               q10new_12 == 2 ~ "Entre 90.000 - 180.000",
                               q10new_12 == 3 ~ "Entre 180.000 - 270.000",
                               q10new_12 == 4 ~ "Entre 270.000 - 360.000",
                               q10new_12 == 5 ~ "Entre 360.000 - 450.000",
                               q10new_12 == 6 ~ "Entre 450.000 - 540.000",
                               q10new_12 == 7 ~ "Entre 540.000 - 630.000",
                               q10new_12 == 8 ~ "Entre 630.000 - 710.000",
                               q10new_12 == 9 ~ "Entre 710.000 - 800.000",
                               q10new_12 == 10 ~ "Entre 800.000 - 940.000",
                               q10new_12 == 11 ~ "Entre 940.000 - 1.100.000",
                               q10new_12 == 12 ~ "Entre 1.100.000 - 1.600.000",
                               q10new_12 == 13 ~ "Entre 1.600.000 - 2.100.000",
                               q10new_12 == 14 ~ "Entre 2.100.000 - 3.200.000",
                               q10new_12 == 15 ~ "Entre 3.200.000 - 4.300.000",
                               q10new_12 == 16 ~ " Más de 4.300.000",
         )
  )

foo <- 
  col %>% 
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(col), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

col <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

col <- 
  col %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Colombia"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(col$incomeppp))
plot(density(col$incomeppp, na.rm = TRUE))

ineq::Gini((col %>% filter(year==2004))$income)
ineq::Gini((col %>% filter(year==2006))$income)
ineq::Gini((col %>% filter(year==2008))$income)
ineq::Gini((col %>% filter(year==2010))$income)
ineq::Gini((col %>% filter(year==2012))$income)
ineq::Gini((col %>% filter(year==2014))$income)
ineq::Gini((col %>% filter(year==2016))$income)
ineq::Gini((col %>% filter(year==2018))$income)

col <- 
  col %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

col <- 
  col %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum),
         wtb = wt, 
         weight1500b = weight1500)
  #        ) %>% 
  # bind_cols(
  #   lapop_merge %>% 
  #     filter(pais == "Colombia") %>% 
  #     arrange(year, idnum) %>% 
  #     select(wt, weight1500) %>% 
  #     rename_all(funs(str_c(., "b")))
  # )


lapop <- 
  lapop %>%
  bind_rows(col)

# Costa Rica ----
ctr <- 
  tibble(read.dta13("CostaRica LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
    
  )

table(ctr$q10)
table(ctr$q10new_12)
table(ctr$q10new_14)
table(ctr$q10new_16)
table(ctr$q10new_18)

foo <- 
  ctr %>% 
  mutate_at(vars(tidyselect::vars_select(names(ctr), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(ctr), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(ctr), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(ctr), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(ctr), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

ctr <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

ctr <- 
  ctr %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Costa Rica"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(ctr$income))
summary(ctr$income)
plot(density(ctr$incomeppp, na.rm = TRUE))

ineq::Gini((ctr %>% filter(year==2004))$income)
ineq::Gini((ctr %>% filter(year==2006))$income)
ineq::Gini((ctr %>% filter(year==2008))$income)
ineq::Gini((ctr %>% filter(year==2010))$income)
ineq::Gini((ctr %>% filter(year==2012))$income)
ineq::Gini((ctr %>% filter(year==2014))$income)
ineq::Gini((ctr %>% filter(year==2016))$income)
ineq::Gini((ctr %>% filter(year==2018))$income)

ctr <- 
  ctr %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

ctr <- 
  ctr %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Costa Rica") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )


lapop <- 
  lapop %>%
  bind_rows(ctr)


# Dominican Republic ----
dmr <- 
  tibble(readstata13::read.dta13("DominicanRepublic LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  #tibble(read.dta13("DominicanRepublic LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
    
  )

table(dmr$q10)
table(dmr$q10new_12)
table(dmr$q10new_14)
table(dmr$q10new_16)
table(dmr$q10new_18)

dmr <-
dmr %>% 
  mutate(q10new_12 = case_when(q10new_12 == 1 ~ "Menos de 1,010 pesos",
                               q10new_12 == 2 ~ "Entre 1,010 y 2,010 pesos",
                               q10new_12 == 3 ~ "Entre 2,011 y 3,020 pesos",
                               q10new_12 == 4 ~ "Entre 3,021 y 4,020 pesos",
                               q10new_12 == 5 ~ "Entre 4,021 y 5,030 pesos",
                               q10new_12 == 6 ~ "Entre 5,031 y 6,040 pesos",
                               q10new_12 == 7 ~ "Entre 6,041 y 8,030 pesos",
                               q10new_12 == 8 ~ "Entre 8,031 y 9,050 pesos",
                               q10new_12 == 9 ~ "Entre 9,051 y 10,560 pesos",
                               q10new_12 == 10 ~ "Entre 10,561 y 12,070 pesos",
                               q10new_12 == 11 ~ "Entre 12,071 y 18,110 pesos",
                               q10new_12 == 12 ~ "Entre 18,111 y 24,140 pesos",
                               q10new_12 == 13 ~ "Entre 24141 y 48,280 pesos",
                               q10new_12 == 14 ~ "Entre 48,281 y 60,350 pesos",
                               q10new_12 == 15 ~ "Entre 60,351 y 72,420 pesos",
                               q10new_12 == 16 ~ "Más de 72,420 pesos",
                               ),
         )

foo <- 
  dmr %>% 
  mutate_at(vars(tidyselect::vars_select(names(dmr), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(dmr), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmr), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmr), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmr), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  # ) %>%  #%>% filter(!is.na(income)) 
  # filter(year == 2012) %>% select(income)
  )


table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

dmr <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

dmr <- 
  dmr %>% 
  mutate(pais = "Dominican Republic",
         pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Dominican Republic"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(dmr$income))
summary(dmr$income)
plot(density(dmr$incomeppp, na.rm = TRUE))

ineq::Gini((dmr %>% filter(year==2004))$income)
ineq::Gini((dmr %>% filter(year==2006))$income)
ineq::Gini((dmr %>% filter(year==2008))$income)
ineq::Gini((dmr %>% filter(year==2010))$income)
ineq::Gini((dmr %>% filter(year==2012))$income)
ineq::Gini((dmr %>% filter(year==2014))$income)
ineq::Gini((dmr %>% filter(year==2016))$income)
ineq::Gini((dmr %>% filter(year==2019))$income)

dmr <- 
  dmr %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

dmr <- 
  dmr %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Dominican Republic") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )


lapop <- 
  lapop %>%
  bind_rows(dmr)


# Ecuador ----
ecu <- 
  tibble(read.dta13("Ecuador LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(ecu$q10)
table(ecu$q10new_12)
table(ecu$q10new_14)
table(ecu$q10new_16)
table(ecu$q10new_18)

foo <- 
  ecu %>% 
  mutate_at(vars(tidyselect::vars_select(names(ecu), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(ecu), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(ecu), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(ecu), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(ecu), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))


table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

ecu <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

ecu <- 
  ecu %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Ecuador"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(ecu$income))
plot(density(ecu$income, na.rm = TRUE))

ineq::Gini((ecu %>% filter(year==2004))$income)
ineq::Gini((ecu %>% filter(year==2006))$income)
ineq::Gini((ecu %>% filter(year==2008))$income)
ineq::Gini((ecu %>% filter(year==2010))$income)
ineq::Gini((ecu %>% filter(year==2012))$income)
ineq::Gini((ecu %>% filter(year==2014))$income)
ineq::Gini((ecu %>% filter(year==2016))$income)
ineq::Gini((ecu %>% filter(year==2019))$income)

ecu <- 
  ecu %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

ecu <- 
  ecu %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Ecuador") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(ecu)

# El Salvador ----
slv <- 
  tibble(readstata13::read.dta13("ElSalvador LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  #tibble(read.dta13("ElSalvador LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )


table(slv$q10)
table(slv$q10new_12)
table(slv$q10new_14)
table(slv$q10new_16)
table(slv$q10new_18)

slv <- 
  slv %>% 
  mutate(q10 = case_when(q10 == 1 ~ "Menos de $45",
                         q10 == 2 ~ "Entre $46- $90",
                         q10 == 3 ~ "$91-$144",
                         q10 == 4 ~ "$145-$288",
                         q10 == 5 ~ "$289-$432",
                         q10 == 6 ~ "$433-$576",
                         q10 == 7 ~ "$577-$720",
                         q10 == 8 ~ "$721-1008",
                         q10 == 9 ~ "$1009-$1440",
                         q10 == 10 ~ "$1441 y más",
                         ),
         q10new_12 = case_when(q10new_12 == 0 ~ "Ningún ingreso",
                               q10new_12 == 1 ~ "Menos de $30",
                               q10new_12 == 2 ~ "$30 - $50",
                               q10new_12 == 3 ~ "$51 - $60",
                               q10new_12 == 4 ~ "$61 - $90",
                               q10new_12 == 5 ~ "$91 - $140",
                               q10new_12 == 6 ~ "$141 - $180",
                               q10new_12 == 7 ~ "$181 - $270",
                               q10new_12 == 8 ~ "$271 - $360",
                               q10new_12 == 9 ~ "$361 - $450",
                               q10new_12 == 10 ~ "$451 - $540",
                               q10new_12 == 11 ~ "$541 - $630",
                               q10new_12 == 12 ~ "$631 - $810",
                               q10new_12 == 13 ~ "$811 - $1,080",
                               q10new_12 == 14 ~ "$1,081 - $1,440",
                               q10new_12 == 15 ~ "$1,441 - $1,800",
                               q10new_12 == 16 ~ "Más de $1,800",
         )
  )

foo <- 
  slv %>% 
  mutate_at(vars(tidyselect::vars_select(names(slv), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(slv), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(slv), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(slv), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(slv), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))


table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

slv <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

slv <- 
  slv %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "El Salvador"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(slv$income))
summary(slv$income)
plot(density(slv$incomeppp, na.rm = TRUE))

# table(is.na(slv$incomepc))
# plot(density(slv$incomeppp, na.rm = TRUE))

ineq::Gini((slv %>% filter(year==2004))$income)
ineq::Gini((slv %>% filter(year==2006))$income)
ineq::Gini((slv %>% filter(year==2008))$income)
ineq::Gini((slv %>% filter(year==2010))$income)
ineq::Gini((slv %>% filter(year==2012))$income)
ineq::Gini((slv %>% filter(year==2014))$income)
ineq::Gini((slv %>% filter(year==2016))$income)
ineq::Gini((slv %>% filter(year==2018))$income)

slv <- 
  slv %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

slv <- 
  slv %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "El Salvador") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(slv)

# Guatemala ----
gua <- 
  tibble(read.dta13("Guatemala LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  #tibble(read.dta13("Guatemala LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010)  %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(gua$q10, gua$year)
table(gua$q10)
table(gua$q10new_12)
table(gua$q10new_14)
table(gua$q10new_16)
table(gua$q10new_18)

gua <- 
gua %>% 
  mutate(q10new_12 = case_when(q10new_12 == 0 ~ "Ningún ingreso",
                               q10new_12 == 1 ~ "Menos de 360 quetzales",
                               q10new_12 == 2 ~ "Entre 360 y 720 quetzales",
                               q10new_12 == 3 ~ "Entre 721 y 1080 quetzales",
                               q10new_12 == 4 ~ "Entre 1081 y 1440 quetzales",
                               q10new_12 == 5 ~ "Entre 1441 y 1800 quetzales",
                               q10new_12 == 6 ~ "Entre 1801 y 2160 quetzales",
                               q10new_12 == 7 ~ "Entre 2161 y 2530 quetzales",
                               
                               q10new_12 == 8 ~ "Entre 2531 y 2870 quetzales",
                               q10new_12 == 9 ~ "Entre 2871 y 3240 quetzales",
                               q10new_12 == 10 ~ "Entre 3241 y 3780 quetzales",
                               q10new_12 == 11 ~ "Entre 3781 y 4320 quetzales",
                               q10new_12 == 12 ~ "Entre 4321 y 5400 quetzales",
                               q10new_12 == 13 ~ "Entre 5401 y 6480 quetzales",
                               q10new_12 == 14 ~ "Entre 6481 y 8640 quetzales",
                               q10new_12 == 15 ~ "Entre 8641 y 10810 quetzales",
                               q10new_12 == 16 ~ "Más de 10810 quetzales",
                               ),
         )

foo <- 
  gua %>% 
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), str_replace, "a", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(gua), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))


table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

gua <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

gua <- 
  gua %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Guatemala"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(gua$income))
summary(gua$income)
plot(density(gua$incomeppp, na.rm = TRUE))

ineq::Gini((gua %>% filter(year==2004))$income)
ineq::Gini((gua %>% filter(year==2006))$income)
ineq::Gini((gua %>% filter(year==2008))$income)
ineq::Gini((gua %>% filter(year==2010))$income)
ineq::Gini((gua %>% filter(year==2012))$income)
ineq::Gini((gua %>% filter(year==2014))$income)
ineq::Gini((gua %>% filter(year==2017))$income)
ineq::Gini((gua %>% filter(year==2019))$income)

gua <- 
  gua %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)


gua <- 
  gua %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Guatemala") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(gua)


# Honduras ----
hon <- 
  tibble(read.dta13("Honduras LAPOP merge 2004-2018 v1.0_W.dta")) %>%
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(hon$q10, hon$year)

table(hon$q10)
table(hon$q10new_12)
table(hon$q10new_14)
table(hon$q10new_16)
table(hon$q10new_18)

foo <- 
  hon %>% 
  mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  #mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  #mutate_at(vars(tidyselect::vars_select(names(hon), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c(" - ", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c(" - ", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, " - "), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, " - "), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, " - ", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

hon <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

hon <- 
  hon %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Honduras"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(hon$incomeppp))
plot(density(hon$incomeppp, na.rm = TRUE))

ineq::Gini((hon %>% filter(year==2004))$income)
ineq::Gini((hon %>% filter(year==2006))$income)
ineq::Gini((hon %>% filter(year==2008))$income)
ineq::Gini((hon %>% filter(year==2010))$income)
ineq::Gini((hon %>% filter(year==2012))$income)
ineq::Gini((hon %>% filter(year==2014))$income)
ineq::Gini((hon %>% filter(year==2016))$income)
ineq::Gini((hon %>% filter(year==2018))$income)

hon <- 
  hon %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

hon <- 
  hon %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Honduras") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(hon)

# Jamaica ----
jam <- 
  tibble(read.dta13("Jamaica LAPOP merge 2006-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(jam$q10)
table(jam$q10new_12)
table(jam$q10new_14)
table(jam$q10new_16)
table(jam$q10new_18)

foo <- 
  jam %>% 
  mutate_at(vars(tidyselect::vars_select(names(jam), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(jam), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(jam), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  #mutate_at(vars(tidyselect::vars_select(names(jam), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(jam), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
         
         # incomepc = if_else(wave == 2012, q10g_12,
         #                    if_else(wave == 2014, q10g_14, q10g_16
         #                    )),
         # incomepc = if_else(str_detect(incomepc, "No income") == TRUE, "0", incomepc),
         # incomepc = if_else(str_detect(incomepc, "Ningún ingreso") == TRUE, "0", incomepc),
         # incomepc = str_remove_all(incomepc, "[:alpha:]"),
         # incomepc = str_remove_all(incomepc, "\\[\\d+\\]"),
  ) #%>% filter(!is.na(income))



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

jam <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

jam <- 
  jam %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Jamaica"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(jam$incomeppp))
plot(density(jam$incomeppp, na.rm = TRUE))

ineq::Gini((jam %>% filter(year==2004))$income)
ineq::Gini((jam %>% filter(year==2006))$income)
ineq::Gini((jam %>% filter(year==2008))$income)
ineq::Gini((jam %>% filter(year==2010))$income)
ineq::Gini((jam %>% filter(year==2012))$income)
ineq::Gini((jam %>% filter(year==2014))$income)
ineq::Gini((jam %>% filter(year==2017))$income)
ineq::Gini((jam %>% filter(year==2019))$income)

jam <- 
  jam %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

jam <- 
  jam %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Jamaica") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(jam)

# Nicaragua ----
nic <- 
  tibble(read.dta13("Nicaragua LAPOP merge 2004-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(nic$q10)
table(nic$q10new_12)
table(nic$q10new_14)
table(nic$q10new_16)
table(nic$q10new_18)

foo <- 
  nic %>% 
  mutate_at(vars(tidyselect::vars_select(names(nic), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(nic), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(nic), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(nic), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  #mutate_at(vars(tidyselect::vars_select(names(nic), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

nic <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

nic <- 
  nic %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Nicaragua"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(nic$incomeppp))
plot(density(nic$incomeppp, na.rm = TRUE))

ineq::Gini((nic %>% filter(year==2004))$income)
ineq::Gini((nic %>% filter(year==2006))$income)
ineq::Gini((nic %>% filter(year==2008))$income)
ineq::Gini((nic %>% filter(year==2010))$income)
ineq::Gini((nic %>% filter(year==2012))$income)
ineq::Gini((nic %>% filter(year==2014))$income)
ineq::Gini((nic %>% filter(year==2016))$income)
ineq::Gini((nic %>% filter(year==2019))$income)

nic <- 
  nic %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

nic <- 
  nic %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Nicaragua") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(nic)

# Panama ----
pan <- 
  tibble(read.dta13("Panama LAPOP merge 2004-2018 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(pan$q10)
table(pan$q10new_12)
table(pan$q10new_14)
table(pan$q10new_16)
table(pan$q10new_18)

foo <- 
  pan %>% 
  mutate_at(vars(tidyselect::vars_select(names(pan), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(pan), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(pan), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(pan), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  #mutate_at(vars(tidyselect::vars_select(names(pan), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

pan <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

pan <- 
  pan %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Panama"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(pan$incomeppp))
plot(density(pan$incomeppp, na.rm = TRUE))

ineq::Gini((pan %>% filter(year==2004))$income)
ineq::Gini((pan %>% filter(year==2006))$income)
ineq::Gini((pan %>% filter(year==2008))$income)
ineq::Gini((pan %>% filter(year==2010))$income)
ineq::Gini((pan %>% filter(year==2012))$income)
ineq::Gini((pan %>% filter(year==2014))$income)
ineq::Gini((pan %>% filter(year==2017))$income)
ineq::Gini((pan %>% filter(year==2018))$income)

pan <- 
  pan %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

pan <- 
  pan %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Panama") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(pan)

# Paraguay ----
par <- 
  tibble(read.dta13("Paraguay LAPOP merge 2006-2019 v1.0_W.dta")) %>% 
  # tibble(read.dta13("Paraguay LAPOP merge 2006-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(par$q10)
table(par$q10new_12)
table(par$q10new_14)
table(par$q10new_16)
table(par$q10new_18)

par <- 
par %>% 
  mutate(q10 = case_when(q10 == 0 ~ "Ningún ingreso",
                         q10 == 1 ~ "Menos de 137.000",
                         q10 == 2 ~ "De 137.001 a 275.000",
                         q10 == 3 ~ "De 275.001 a 550.000",
                         q10 == 4 ~ "De 550.001 a 825.000",
                         q10 == 5 ~ "De 825.001 a 1.100.000",
                         q10 == 6 ~ "De 1.100.001 a 1.650.000",
                         q10 == 7 ~ "De 1.650.001 a 2.200.000",
                         q10 == 8 ~ "De 2.200.001 a 2.750.000",
                         q10 == 9 ~ "De 2.750.001 a 4.125.000",
                         q10 == 10 ~ "De 4.125.001 o más",
                         ))

foo <- 
  par %>% 
  mutate_at(vars(tidyselect::vars_select(names(par), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(par), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(par), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(par), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(par), starts_with('q10', ignore.case = TRUE))), str_replace, "a", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )




table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

par <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

par <- 
  par %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Paraguay"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(par$incomeppp))
plot(density(par$incomeppp, na.rm = TRUE))

ineq::Gini((par %>% filter(year==2004))$income)
ineq::Gini((par %>% filter(year==2006))$income)
ineq::Gini((par %>% filter(year==2008))$income)
ineq::Gini((par %>% filter(year==2010))$income)
ineq::Gini((par %>% filter(year==2012))$income)
ineq::Gini((par %>% filter(year==2014))$income)
ineq::Gini((par %>% filter(year==2016))$income)
ineq::Gini((par %>% filter(year==2019))$income)

par <- 
  par %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

par <- 
  par %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Paraguay") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(par)

# Peru ----
per <- 
  tibble(read.dta13("Peru LAPOP merge 2006-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(per$q10)
table(per$q10new_12)
table(per$q10new_14)
table(per$q10new_16)
table(per$q10new_18)

foo <- 
  per %>% 
  mutate_at(vars(tidyselect::vars_select(names(per), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(per), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(per), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(per), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(per), starts_with('q10', ignore.case = TRUE))), str_replace, "a", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

per <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

per <- 
  per %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Peru"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(per$incomeppp))
plot(density(per$incomeppp, na.rm = TRUE))

ineq::Gini((per %>% filter(year==2004))$income)
ineq::Gini((per %>% filter(year==2006))$income)
ineq::Gini((per %>% filter(year==2008))$income)
ineq::Gini((per %>% filter(year==2010))$income)
ineq::Gini((per %>% filter(year==2012))$income)
ineq::Gini((per %>% filter(year==2014))$income)
ineq::Gini((per %>% filter(year==2017))$income)
ineq::Gini((per %>% filter(year==2019))$income)

per <- 
  per %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

per <- 
  per %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Peru") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(per)

# Uruguay ----
ury <- 
  tibble(read.dta13("Uruguay LAPOP merge 2007-2019 v1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(ury$q10)
table(ury$q10new_12)
table(ury$q10new_14)
table(ury$q10new_16)
table(ury$q10new_18)

foo <- 
  ury %>% 
  mutate_at(vars(tidyselect::vars_select(names(ury), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(ury), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(ury), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(ury), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(ury), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12,
                                  if_else(wave == 2014, q10new_14,
                                          if_else(wave == 2016, q10new_16, q10new_18
                                          )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )



table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

ury <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = TRUE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

ury <- 
  ury %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Uruguay"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(ury$incomeppp))
plot(density(ury$incomeppp, na.rm = TRUE))

ineq::Gini((ury %>% filter(year==2004))$income)
ineq::Gini((ury %>% filter(year==2007))$income)
ineq::Gini((ury %>% filter(year==2008))$income)
ineq::Gini((ury %>% filter(year==2010))$income)
ineq::Gini((ury %>% filter(year==2012))$income)
ineq::Gini((ury %>% filter(year==2014))$income)
ineq::Gini((ury %>% filter(year==2017))$income)
ineq::Gini((ury %>% filter(year==2019))$income)

ury <- 
  ury %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

ury <- 
  ury %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Uruguay") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )


lapop <- 
  lapop %>%
  bind_rows(ury)

## Countries with incomplete info from 2010-2019 ----
# Haiti ----
# 2010-2014
hai <- 
  tibble(read.dta13("Incomplete cross section/Haiti LAPOP merge 2006-2014 v3.0_W.dta")) %>% 
  #tibble(read.dta13("Incomplete cross section/Haiti LAPOP merge 2006-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  # filter(year >= 2010) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(hai$q10)
table(hai$q10new_12)
table(hai$q10new_14)

foo <- 
  hai %>% 
  mutate_at(vars(tidyselect::vars_select(names(hai), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(hai), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14,
                                          )),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, "-", 2, simplify = TRUE))

hai <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

hai <- 
  hai %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Haiti"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(hai$incomeppp))
plot(density(hai$incomeppp, na.rm = TRUE))

ineq::Gini((hai %>% filter(year==2004))$income)
ineq::Gini((hai %>% filter(year==2006))$income)
ineq::Gini((hai %>% filter(year==2008))$income)
ineq::Gini((hai %>% filter(year==2010))$income)
ineq::Gini((hai %>% filter(year==2012))$income)
ineq::Gini((hai %>% filter(year==2014))$income)
ineq::Gini((hai %>% filter(year==2016))$income)
ineq::Gini((hai %>% filter(year==2018))$income)

hai <- 
  hai %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

# 2017
hai_17 <- 
  tibble(read.dta13("Incomplete cross section/Haiti LAPOP AmericasBarometer 2017 V1.0_W.dta")) %>% 
  #tibble(read.dta13("Incomplete cross section/Haiti LAPOP merge 2006-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2017, wave = "2016/17") %>% 
  mutate(
    edocivil = q11n,
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(is.na(hai_17$q10new))

foo <- 
  hai_17 %>% 
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(hai_17), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

# table(foo$incomepc)
# foo2 <- as_tibble(str_split(foo$incomepc, " - ", 2, simplify = TRUE))

hai_17 <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

hai_17 <- 
  hai_17 %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Haiti"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(hai_17$incomeppp))
plot(density(hai_17$incomeppp, na.rm = TRUE))

hai_17 <- 
  hai_17 %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

#

hai <- 
  hai %>% 
  bind_rows(hai_17) 

hai <- 
hai %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Haiti") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(hai)


#
# Belize ----
blz <- 
  #tibble(read.dta13("Incomplete cross section/Belize LAPOP merge 2008-2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Belize LAPOP merge 2008-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE)  %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(blz$q10)
table(blz$q10new_12)
table(blz$q10new_14)

foo <- 
  blz %>% 
  mutate_at(vars(tidyselect::vars_select(names(blz), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(blz), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(blz), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(blz), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(blz), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14
                                  # if_else(wave == 2014, q10new_14,
                                          # if_else(wave == 2016, q10new_16, q10new_18
                                          )), # )),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

blz <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

blz <- 
  blz %>% 
  mutate(pais = "Belize") %>% 
  left_join(ppp %>% 
              filter(pais == "Belize"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(blz$incomeppp))
plot(density(blz$incomeppp, na.rm = TRUE))

ineq::Gini((blz %>% filter(year==2004))$income)
ineq::Gini((blz %>% filter(year==2006))$income)
ineq::Gini((blz %>% filter(year==2008))$income)
ineq::Gini((blz %>% filter(year==2010))$income)
ineq::Gini((blz %>% filter(year==2012))$income)
ineq::Gini((blz %>% filter(year==2014))$income)
ineq::Gini((blz %>% filter(year==2016))$income)
ineq::Gini((blz %>% filter(year==2018))$income)



blz <- 
  blz %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

blz <- 
  blz %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Belize") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>% 
  bind_rows(blz)
#  
# Guyana ----
# 2010-2014
guy <- 
  #tibble(read.dta13("Incomplete cross section/Guyana LAPOP merge 2006-2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Guyana LAPOP merge 2006-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(guy$q10)
table(guy$q10new_12)
table(guy$q10new_14)

foo <- 
  guy %>% 
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14
                                  # if_else(wave == 2014, q10new_14,
                                  # if_else(wave == 2016, q10new_16, q10new_18
                          )), # )),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

guy <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

guy <- 
  guy %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Guyana"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(guy$incomeppp))
plot(density(guy$incomeppp, na.rm = TRUE))

ineq::Gini((guy %>% filter(year==2004))$income)
ineq::Gini((guy %>% filter(year==2006))$income)
ineq::Gini((guy %>% filter(year==2008))$income)
ineq::Gini((guy %>% filter(year==2010))$income)
ineq::Gini((guy %>% filter(year==2012))$income)
ineq::Gini((guy %>% filter(year==2014))$income)
ineq::Gini((guy %>% filter(year==2016))$income)
ineq::Gini((guy %>% filter(year==2018))$income)

guy <- 
  guy %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

# 2016
guy_16 <- 
  #tibble(read.dta13("Incomplete cross section/Guyana LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Guyana LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2016, wave = "2016/16") %>% 
  mutate(
    edocivil = q11n,
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(is.na(guy_16$q10new))

foo <- 
  guy_16 %>% 
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(guy_16), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

guy_16 <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

guy_16 <- 
  guy_16 %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Guyana"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(guy_16$income))
summary(guy_16$income)
plot(density(guy_16$incomeppp, na.rm = TRUE))

guy_16 <- 
  guy_16 %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

#
guy <- 
guy %>% 
  bind_rows(guy_16)

guy <- 
  guy %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Guyana") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>%
  bind_rows(guy)

#

# Suriname ----
srn <- 
  tibble(read.dta13("Incomplete cross section/Suriname LAPOP merge 2010-2014 v3.0_W.dta")) %>% 
  #tibble(read.dta13("Incomplete cross section/Suriname LAPOP merge 2010-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(srn$q10)
table(srn$q10new_12)
table(srn$q10new_14)

srn <- 
  srn %>% 
  mutate(q10 = case_when(q10 == 0 ~ "No income",
                         q10 == 1 ~ "Less than SRD 75",
                         q10 == 2 ~ "SRD 76- SRD 150",
                         q10 == 3 ~ "SRD151- SRD300",
                         q10 == 4 ~ "SRD301- SRD450",
                         q10 == 5 ~ "SRD451- SRD600",
                         q10 == 6 ~ "SRD601-SRD900",
                         q10 == 7 ~ "SRD901-SRD1200",
                         q10 == 8 ~ "SRD1201-SRD1500",
                         q10 == 9 ~ "SRD1501-SRD2250",
                         q10 == 10 ~ "More than SRD 2251",
                         ),
         q10new_12 = case_when(q10new_12 == 0 ~ "No income",
                               q10new_12 == 1 ~ "Less than SRD 200",
                               q10new_12 == 2 ~ "SRD 200 - 300",
                               q10new_12 == 3 ~ "SRD 301 - 400",
                               q10new_12 == 4 ~ "SRD 401 - 600",
                               q10new_12 == 5 ~ "SRD 601 - 800",
                               q10new_12 == 6 ~ "SRD 801 - 900",
                               q10new_12 == 7 ~ "SRD 901 - 1000",
                               q10new_12 == 8 ~ "SRD 1001 - 1200",
                               q10new_12 == 9 ~ "SRD 1201 - 1500",
                               q10new_12 == 10 ~ "SRD 1501 - 1800",
                               q10new_12 == 11 ~ "SRD 1801 - 2400",
                               q10new_12 == 12 ~ "SRD 2401 - 3000",
                               q10new_12 == 13 ~ "SRD 3001 - 3600",
                               q10new_12 == 14 ~ "SRD 3601 - 4800",
                               q10new_12 == 15 ~ "SRD 4801 - 6000",
                               q10new_12 == 16 ~ "More than SRD 6000",
         )
  )

foo <- 
  srn %>% 
  mutate_at(vars(tidyselect::vars_select(names(srn), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(srn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(srn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(srn), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(srn), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14)),
                                  # if_else(wave == 2014, q10new_14,
                                  #         if_else(wave == 2016, q10new_16, q10new_18
                                  #         )))),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

srn <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

srn <- 
  srn %>% 
  mutate(pais = "Suriname") %>% 
  left_join(ppp %>% 
              filter(pais == "Suriname"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(srn$incomeppp))
plot(density(srn$incomeppp, na.rm = TRUE))

srn <- 
  srn %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

srn <- 
  srn %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Suriname") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )

lapop <- 
  lapop %>% 
  bind_rows(srn)
#  

# Trinidad & Tobago ----
ttb <- 
  #tibble(read.dta13("Incomplete cross section/Trinidad&Tobago LAPOP merge 2010-2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Trinidad&Tobago LAPOP merge 2010-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(ttb$q10)
table(ttb$q10new_12)
table(ttb$q10new_14)

foo <- 
  ttb %>% 
  mutate_at(vars(tidyselect::vars_select(names(ttb), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(ttb), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(ttb), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(ttb), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(ttb), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14,
                          )),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

ttb <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

ttb <- 
  ttb %>% 
  mutate(pais = "Trinidad and Tobago") %>% 
  left_join(ppp %>% 
              filter(pais == "Trinidad and Tobago"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(ttb$incomeppp))
plot(density(ttb$incomeppp, na.rm = TRUE))

ttb <- 
  ttb %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

ttb <- 
  ttb %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Trinidad & Tobago") %>% 
      arrange(year, idnum) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b")))
  )


lapop <- 
  lapop %>% 
  bind_rows(ttb)
#  


# Venezuela ----
vnz <- 
  #tibble(read.dta13("Incomplete cross section/Venezuela LAPOP merge 2007-2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Venezuela LAPOP merge 2007-2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(
    edocivil = if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(vnz$q10)
table(vnz$q10new_12)
table(vnz$q10new_14)

foo <- 
  vnz %>% 
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), str_replace, "hasta", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(vnz), starts_with('q10', ignore.case = TRUE))), str_replace, "\\–", "\\-") %>%
  mutate(income = if_else(wave %in% seq(2004, 2010, 2), q10,
                          if_else(wave == 2012, q10new_12, q10new_14,
                          )),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

vnz <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

# NOTE: Venezuela's ppp series stops in 2011. I use the last available exchange rate

vnz <- 
  vnz %>% 
  mutate(pais = "Venezuela") %>% 
  left_join(ppp %>% 
              filter(pais == "Venezuela, RB") %>% 
              mutate(pais = "Venezuela") %>% 
              filter(!is.na(pppexrate)) %>%
              # filter(year >= 2010) %>% 
              mutate(year = if_else(year == 2011, 2012, year)) %>% 
              bind_rows(
                ppp %>% 
                  filter(pais == "Venezuela, RB") %>% 
                  mutate(pais = "Venezuela") %>% 
                  filter(year == 2011) %>% 
                  mutate(year = 2014)
              ),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(vnz$incomeppp))
plot(density(vnz$incomeppp, na.rm = TRUE))

vnz <- 
  vnz %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

vnz <- 
  vnz %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum),
         wtb = wt,
         weight1500b = weight1500
         ) 
# %>% 
#   left_join(
#     lapop_merge %>% 
#       filter(pais == "Venezuela" & year >= 2008) %>% 
#       arrange(year, idnum) %>% 
#       mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
#       select(idobs, wt, weight1500) %>% 
#       rename_all(funs(str_c(., "b"))) %>% rename(idobs = idobsb)
#   )

lapop <- 
  lapop %>% 
  bind_rows(vnz)
#  

## Countries with one cross section ----
# Antigua & Barbuda ----
# ant <- 
#   #tibble(read.dta13("Incomplete cross section/Antigua LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
#   tibble(read.dta13("Incomplete cross section/Antigua LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
#   sjlabelled::as_label(add.non.labelled = TRUE) %>% 
#   mutate(year = 2016, wave = "2016/17") %>% 
#   mutate(
#     edocivil = q11n,#if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
#     edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
#                        if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
#                                if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
#                                        if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
#                                        )))),
#     # Number of children in house 
#     children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
#     # Tamaño hogar
#     tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
#                       if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
#     tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
#   )
# 
# table(ant$q10new)
# 
# foo <- 
#   ant %>% 
#   mutate_at(vars(tidyselect::vars_select(names(ant), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
#   mutate_at(vars(tidyselect::vars_select(names(ant), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
#   mutate_at(vars(tidyselect::vars_select(names(ant), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
#   mutate_at(vars(tidyselect::vars_select(names(ant), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
#   mutate_at(vars(tidyselect::vars_select(names(ant), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
#   mutate(income = q10new,
#          income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
#          income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
#          income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
#          income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
#          income = if_else(str_detect(income, "None") == TRUE, "0", income),
#          income = if_else(str_detect(income, "No income") == TRUE, "0", income),
#          income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
#          income = str_remove_all(income, "[:alpha:]"),
#          income = str_remove_all(income, "\\[\\d+\\]"), 
#   )
# 
# table(foo$income)
# foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))
# 
# ant <- 
#   foo %>% 
#   select(-income) %>% 
#   bind_cols(
#     foo1 %>% 
#       mutate_all(str_remove_all, "\\$") %>% 
#       mutate_all(as.numeric) %>% 
#       mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
#                               #if_else(V2 == max(V2, na.rm = TRUE), V2,
#                               rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
#       )%>% 
#       select(income)
#   ) %>% 
#   mutate(income = income/tam_hog)
# 
# ant <- 
#   ant %>% 
#   mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
#   left_join(ppp %>% 
#               filter(pais == "Antigua and Barbuda"),
#             by = c("pais", "year")) %>% 
#   mutate(incomeppp = income/pppexrate,
#          # incomeppp = incomepc/pppexrate,
#   )
# 
# rm(foo, foo1)
# 
# table(is.na(ant$incomeppp))
# summary(ant$income)
# plot(density(ant$incomeppp, na.rm = TRUE))
# 
# ant <- 
#   ant %>% 
#   select_if(names(.) %in% variables$variable) %>% 
#   mutate_all(as.character) %>% 
#   mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
#   mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
#   mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
#   mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)
# 
# #
# 
# ant <- 
#   ant %>% 
#   arrange(year, idnum) %>% 
#   mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
#   left_join(
#     lapop_merge %>% 
#       filter(pais == "Antigua and Barbuda") %>% 
#       arrange(year, idnum) %>% 
#       mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
#       select(idobs, wt, weight1500) %>% 
#       rename_all(funs(str_c(., "b"))) %>% rename(idobs = idobsb)
#   )
# 
# lapop <- 
#   lapop %>%
#   bind_rows(ant)

# Bahamas ----
bhm <- 
  #tibble(read.dta13("Incomplete cross section/Bahamas LAPOP AmericasBarometer 2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Bahamas LAPOP AmericasBarometer 2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014")  %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(bhm$q10new)

foo <- 
  bhm %>% 
  mutate_at(vars(tidyselect::vars_select(names(bhm), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(bhm), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(bhm), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(bhm), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(bhm), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "\\+") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(is.na(foo$income))
table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

bhm <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(str_remove_all, "\\+") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

bhm <- 
  bhm %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Bahamas, The") %>% 
              mutate(pais = "Bahamas"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(bhm$incomeppp))
summary(bhm$income)
plot(density(bhm$incomeppp, na.rm = TRUE))

bhm <- 
  bhm %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

#
bhm <- 
  bhm %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Bahamas") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(bhm)


# Barbados ----
brb <- 
  #tibble(read.dta13("Incomplete cross section/Barbados LAPOP AmericasBarometer 2014 v3.0_W.dta")) %>% 
  tibble(read.dta13("Incomplete cross section/Barbados LAPOP AmericasBarometer 2014 v3.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014") %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(brb$q10new)

foo <- 
  brb %>% 
  mutate_at(vars(tidyselect::vars_select(names(brb), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(brb), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(brb), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(brb), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(brb), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "No tiene ingresos") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))


brb <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

brb <- 
  brb %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Barbados"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         #incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(brb$incomeppp))
summary(brb$income)
plot(density(brb$incomeppp, na.rm = TRUE))

brb <- 
  brb %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

brb <- 
  brb %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Barbados") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(brb)

# Dominica ----
dmn <- 
  #tibble(read.dta13("Incomplete cross section/Dominica LAPOP AmericasBarometer 2016 V1.0_Wdta")) %>% 
  tibble(read.dta13("Incomplete cross section/Dominica LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014") %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )


table(dmn$q10new)

foo <- 
  dmn %>% 
  mutate_at(vars(tidyselect::vars_select(names(dmn), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(dmn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmn), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(dmn), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

dmn <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

dmn <- 
  dmn %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Dominica"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(dmn$incomeppp))
summary(dmn$income)
plot(density(dmn$incomeppp, na.rm = TRUE))

dmn <- 
  dmn %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

dmn <- 
  dmn %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Dominica") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(dmn)


# Grenada ----
grn <- 
  #tibble(read.dta13("Incomplete cross section/Grenada LAPOP AmericasBarometer 2016 V1.0_Wdta")) %>% 
  tibble(read.dta13("Incomplete cross section/Grenada LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014") %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(grn$q10new)

foo <- 
  grn %>% 
  mutate_at(vars(tidyselect::vars_select(names(grn), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(grn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(grn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(grn), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(grn), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

grn <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

grn <- 
  grn %>% 
  mutate(pais = stringi::stri_trans_general(pais, "Latin-ASCII")) %>% 
  left_join(ppp %>% 
              filter(pais == "Grenada"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(grn$incomeppp))
summary(grn$income)
plot(density(grn$incomeppp, na.rm = TRUE))

grn <- 
  grn %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

grn <- 
  grn %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Grenada") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(grn)



# Saint Kitts and Nevis ----
skn <- 
  #tibble(read.dta13("Incomplete cross section/StKittsNevis LAPOP AmericasBarometer 2016 V1.0_Wdta")) %>% 
  tibble(read.dta13("Incomplete cross section/StKittsNevis LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014")  %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(skn$q10new)

foo <- 
  skn %>% 
  mutate_at(vars(tidyselect::vars_select(names(skn), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(skn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(skn), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(skn), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(skn), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

skn <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

skn <- 
  skn %>% 
  mutate(pais = "St. Kitts and Nevis") %>% 
  left_join(ppp %>% 
              filter(pais == "St. Kitts and Nevis"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(skn$incomeppp))
summary(skn$income)
plot(density(skn$incomeppp, na.rm = TRUE))

skn <- 
  skn %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

skn <- 
  skn %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Saint Kitts and Nevis") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(skn)




# St Lucia ----
stl <- 
  #tibble(read.dta13("Incomplete cross section/StLucia LAPOP AmericasBarometer 2016 V1.0_Wdta")) %>% 
  tibble(read.dta13("Incomplete cross section/StLucia LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014") %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )

table(stl$q10new)

foo <- 
  stl %>% 
  mutate_at(vars(tidyselect::vars_select(names(stl), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(stl), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(stl), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(stl), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(stl), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

stl <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

stl <- 
  stl %>% 
  mutate(pais = "St. Lucia") %>% 
  left_join(ppp %>% 
              filter(pais == "St. Lucia"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(stl$incomeppp))
summary(stl$income)
plot(density(stl$incomeppp, na.rm = TRUE))

stl <- 
  stl %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

stl <- 
  stl %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Saint Lucia") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(stl)


# St Vincent ----
stv <- 
  #tibble(read.dta13("Incomplete cross section/StVincent LAPOP AmericasBarometer 2016 V1.0_Wdta")) %>% 
  tibble(read.dta13("Incomplete cross section/StVincent LAPOP AmericasBarometer 2016 V1.0_W.dta")) %>% 
  sjlabelled::as_label(add.non.labelled = TRUE) %>% 
  mutate(year = 2014, wave = "2014") %>% 
  mutate(
    edocivil = q11n, #if_else(year %in% c(2004:2012), as.character(q11), as.character(q11n)),
    edocivil = if_else(edocivil %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
                       if_else(edocivil %in% c("Casado", "Casado [Siga]", "Married"), "Married",
                               if_else(edocivil %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
                                       if_else(edocivil %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together"
                                       )))),
    # Number of children in house 
    children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # Tamaño hogar
    tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c, 
                      if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    tam_hog = if_else(tam_hog == 0, as.integer(1), as.integer(tam_hog))
  )


table(stv$q10new)

foo <- 
  stv %>% 
  mutate_at(vars(tidyselect::vars_select(names(stv), starts_with('q10', ignore.case = TRUE))), as.character) %>% 
  mutate_at(vars(tidyselect::vars_select(names(stv), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\,") %>%
  mutate_at(vars(tidyselect::vars_select(names(stv), starts_with('q10', ignore.case = TRUE))), str_remove_all, "\\.") %>%
  mutate_at(vars(tidyselect::vars_select(names(stv), starts_with('q10', ignore.case = TRUE))), str_replace, "and", "\\-") %>%
  mutate_at(vars(tidyselect::vars_select(names(stv), starts_with('q10', ignore.case = TRUE))), str_replace, "y", "\\-") %>%
  mutate(income = q10new,
         income = if_else(str_detect(income, "Más de") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "More than") == TRUE, str_c("-", income), income),
         income = if_else(str_detect(income, "Menos de") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "Less than") == TRUE, str_c(income, "-"), income),
         income = if_else(str_detect(income, "None") == TRUE, "0", income),
         income = if_else(str_detect(income, "No income") == TRUE, "0", income),
         income = if_else(str_detect(income, "Ningún ingreso") == TRUE, "0", income),
         income = str_remove_all(income, "[:alpha:]"),
         income = str_remove_all(income, "\\[\\d+\\]"), 
  )

table(foo$income)
foo1 <- as_tibble(str_split(foo$income, "-", 2, simplify = TRUE))

stv <- 
  foo %>% 
  select(-income) %>% 
  bind_cols(
    foo1 %>% 
      mutate_all(str_remove_all, "\\$") %>% 
      mutate_all(as.numeric) %>% 
      mutate(income = if_else(is.na(V1) & !is.na(V2), V2,
                              #if_else(V2 == max(V2, na.rm = TRUE), V2,
                              rowSums(cbind(V1, V2), na.rm = FALSE)/2),#),
      )%>% 
      select(income)
  ) %>% 
  mutate(income = income/tam_hog)

stv <- 
  stv %>% 
  mutate(pais = "St. Vincent") %>% 
  left_join(ppp %>% 
              filter(pais == "St. Vincent and the Grenadines") %>% 
              mutate(pais = "St. Vincent"),
            by = c("pais", "year")) %>% 
  mutate(incomeppp = income/pppexrate,
         # incomeppp = incomepc/pppexrate,
  )

rm(foo, foo1)

table(is.na(stv$incomeppp))
summary(stv$income)
plot(density(stv$incomeppp, na.rm = TRUE))

stv <- 
  stv %>% 
  select_if(names(.) %in% variables$variable) %>% 
  mutate_all(as.character) %>% 
  mutate_if(names(.) %in% variables_num$variable, as.numeric) %>% 
  mutate_if(names(.) %in% variables_fct$variable, as.factor) %>% 
  mutate_if(names(.) %in% variables_int$variable, as.integer) %>% 
  mutate_if(names(.) %in% variables_date$variable, lubridate::ymd)

stv <- 
  stv %>% 
  arrange(year, idnum) %>% 
  mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
  bind_cols(
    lapop_merge %>% 
      filter(pais == "Saint Vincent and the Grenadines") %>% 
      arrange(year, idnum) %>% 
      #mutate(idobs = str_c(pais, "_", year, "_", idnum)) %>% 
      select(wt, weight1500) %>% 
      rename_all(funs(str_c(., "b"))) 
  )

lapop <- 
  lapop %>%
  bind_rows(stv)


## Save raw data ----
setwd("~/Documents/Tesis/Tesis PSE/Datos")
lapop_raw <- lapop 
haven::write_dta(lapop_raw, "lapop_raw.dta")

## Final LAPOP database ----
rm(list = ls())
select <- dplyr::select
setwd("~/Documents/Tesis/Tesis PSE/Datos")
lapop <- tibble(read.dta13("lapop_raw.dta"))

# Variables for analysis ----
lapop <- 
  lapop %>% 
  mutate(# ID
    idobs = seq(1:nrow(lapop)),
    idobs = str_c(str_sub(countrycode, end = 3), "_", str_sub(year, start = 3), "_", idobs),
    # Sex 
    sex = if_else(sex %in% c("Mujer", "Female"), "Female", "Male"), 
    # Sex (interviewer)
    sexi = if_else(sexi %in% c("Mujer", "Female"), "Female", "Male"),
    # Age
    age = as.numeric(as.character(q2)),
    # Years of schooling
    ed = as.numeric(as.character(ed)),
    
    # Experience
    exper = age - ed,
    exper2 = exper^2,
    exper3 = exper^3,
    
    # Color (interviewed)
    colorr = na_if(colorr, "Could not be classified"),
    colorr = as.character(colorr),
    colorr = if_else(colorr %in% c("Más claro", "más claro", "very light", "Very Light"), "1",
                     if_else(colorr %in% c("Más oscuro", "más oscuro", "very dark", "Very Dark"), "11", colorr)),
    colorr = as.numeric(colorr),
    colorr = na_if(colorr, 12),
    # Color (interviewer)
    colori = na_if(colori, "Could not be classified"),
    colori = as.character(colori),
    colori = if_else(colori %in% c("Más claro", "más claro", "very light", "Very Light"), "1",
                     if_else(colori %in% c("Más oscuro", "más oscuro", "very dark", "Very Dark"), "11", colori)),
    colori = as.numeric(colori),
    colori = na_if(colori, 12),
    # Color factor (interviewed)
    colorr_fct = if_else(colorr <= 3, "Light",
                         if_else(colorr %in% seq(4,8), "Medium",
                                 "Dark")),
    colorr_fct = fct_relevel(colorr_fct, "Light", "Medium", "Dark"),
    # Etnia
    etnia = if_else(etid %in% c("Blanca", "White", "Blanco", "Caucasian", "Caucásico"), "White", 
                    if_else(etid %in% c("Mestiza", "Mestiza o trigueña", "Mestiza/India", "Mixto", "Mestizo", "Criollo", "Mixed", "Morena", "Ladina"), "Mestiza",
                            if_else(etid %in% c("Indígena", "De la Amazonia", "Indígena - originaria", "Quechua", "Aymara",
                                                "Maya Ketchi", "Maya Mopan", "Maya Yucatec", "Amerindian", "Indo-Guyanese", "Amerindio", "Indio", "Indian (Indigenous)"), "Indigenous",
                                    if_else(etid %in% c("Afro Dominican", "Negra", "Negra (Afro-boliviano)", "Negra o Afro-argentina", "Negra/Domincano Negro", 
                                                        "Afro Dominican", "Black", "Negro/ Africano", "Garífuna", "Black or Afro-Guyanese", "Afro-Surinamés", "Maroons"), "Afro",
                                            if_else(etid %in% c("Chino", "Amarillo", "Oriental", "Otra", "Other", "Otro", "Hindú", 
                                                                "Menonitas", "Español", "Chinese", "Portuguese", "Indostánico (Indios Orientales)", "Indios Orientales", "East Indian",
                                                                "Javanés", "Judíos", "Sirio/Libanesa"), "Other",
                                                   if_else(etid %in% c("Mulata", "Zamba", "Mulatto"), "Mulata",
                                                   "Other")))))),
    #etnia = na_if(etnia, ""),
    etnia = fct_relevel(etnia, "White", "Mestiza", "Mulata", "Indigenous", "Afro", "Other"),
    
    # Region within country
    country_region = str_c(countrycode, "_", estratopri),
    country_region = str_replace_all(country_region, c("\\(" = "", "\\)" = "", "\\+" = "", "\\&" = "", "\\." = "", "\\," = "","\\/" = "")),
    country_region = str_replace_all(country_region, c(" " = "_", "-"  = "_")),
    
    # Region in continent
    region = if_else(countrycode %in% c("ARG", "BOL", "BRA", "CHL", "COL", "ECU", "GUY", "PER", "PRY", "SUR", "URY", "VEN"), "South_America",
                     if_else(countrycode %in% c("BLZ", "CRI", "GTM", "HND", "MEX", "NIC", "PAN", "SLV"), "Central_America", "Caribbean")),

    # Urban/Rural
    ur = if_else(ur == "Rural", "Rural", "Urban"),
    
    # Locality size 
    localidad = if_else(tamano %in% c("Capital Nacional (área metropolitana)"), "Metropolitan_area",
                                      if_else(tamano %in% c("Ciudad grande"), "City_big",
                                              if_else(tamano %in% c("Ciudad mediana", "Medium City"), "City_medium",
                                                      if_else(tamano %in% c("Ciudad pequeña", "Small City"), "City_small", "Rural_area"
                                                              )))),
    
    # Cohorte 
    cohorte = factor(if_else(age > 50, "1", 
                      if_else(age >= 40 & age <= 50, "2", 
                              if_else(age >= 26 & age <= 40, "3",
                                      if_else(age < 26, "4", 
                                              "0"))))),
    # Estado Civil 
    # edocivil = if_else(q11 %in% c("Single", "Solteiro", "Soltero", "Soltero [Pasar a Q12C]"), "Single",
    #                    if_else(q11 %in% c("Casado", "Casado [Siga]", "Married"), "Married",
    #                            if_else(q11 %in% c("Divorciado", "Divorced", "Divorciado [Pasa a Q12C]", "Separado", "Separado [Pasar a Q12C]", "Separated"), "Divorced_or_Separated",
    #                                    if_else(q11 %in% c("Widowed", "Viúvo", "Viudo [Pasar a Q12C]", "Viudo"), "Widowed", "Living_together_not_married"
    #                                     )))),
    # 
    # # Number of children in house 
    # children = if_else(is.na(q12), as.integer(0), as.integer(q12)),
    # # Tamaño hogar
    # tam_hog = if_else(!(year %in% seq(2004, 2010, 2)), q12c,  
    #                   if_else(edocivil %in% c("Divorced_or_Separated", "Widowed", "Single"), as.integer(1 + children), as.integer(2 + children))),
    # 
    # Ocupación
    ocupation = if_else(ocup4a %in% c("Trabajando", "Working"), "Working",
                       if_else(ocup4a %in% c("Es estudiante", "Student"), "Studying",
                               if_else(ocup4a %in% c("Actively looking for a job", "Está buscando trabajo activamente"), "Actively_looking_for_a_job",
                                       if_else(ocup4a %in% c("No está trabajando en este momento pero tiene trabajo", "Not Working, but have a job", "Not working at the moment, but have a job", "Not working, but have a job"), "Not_Working_but_have_job", 
                                               if_else(ocup4a %in% c("Se dedica a los quehaceres de su hogar", "Taking care of the home"), "Taking_care_of_the_home",
                                                       if_else(ocup4a %in% c("Not working and not looking for a job", "No trabaja y no está buscando trabajo"), "Not_working_and_not_looking_for_job", 
                                                               "Retired, pensioner or permanently disabled to work")))))),
    
    # Ocupation (OIT)
    ocupoit = str_replace_all(ocupoit, ",", ""),
    ocupoit = str_replace_all(ocupoit, "y", ""),
    ocupoit = str_replace_all(ocupoit, " ", "_"),
    ocupoit = stringi::stri_trans_general(ocupoit, "Latin-ASCII"),
    ocupoit = na_if(ocupoit, ""),
    
    # Economic situation
    eco_sit_sr = case_when(q10e == "Aumentó" ~ "Increased",
                           q10e == "Disminuyó" ~ "Decreased",
                           q10e == "Permaneció igual" ~ "Remained_same",
                           q10e == "Perm-neció igual" ~ "Remained_same",
                           q10e == "Disminu-ó" ~ "Decreased",
                           q10e == "Increased" ~ "Increased",
                           q10e == "Decreased" ~ "Decreased",
                           q10e == "Remained the same" ~ "Remained_same"
                           ),
    
    # # Income per capita (monthly hosuehold income between household size)
    # incomeppp = incomeppp/tam_hog,
    
    # Remittances 
    remit = if_else(q10a %in% c("Sí", "Yes"), 1, 
                    if_else(q10a == "No", 0, 99)),
    remit = na_if(remit, 99),

    # Income change wrt previous year
    # income_change = if_else(q10e %in% c("Aumentó", "Increased"), "Increased",
    #                         if_else(q10e %in% c("Disminuyó", "Disminu-ó", "Decreased"), "Decreased",
    #                                 if_else(q10e %in% c("Permaneció igual", "Perm-neció igual", "Remained the same"), "Remained_the_same",
    #                                 as.character(q10e)))),

    # Preferences for redistribution 
    pref_red = ros4,
    
    # Discrimination 
    dis_color = if_else(dis11 %in% c("Algunas veces", "Muchas veces"), 1, 
                        if_else(dis11 %in% c("Nunca", "Pocas veces"), 0, 
                        99)),
    dis_color = na_if(dis_color, 99),
    dis_gov = if_else(dis2 %in% c("Sí", "Sim", "Yes"), 1, 
                      if_else(dis2 %in% c("No", "Não"), 0, 99)),
    dis_gov = na_if(dis_gov, 99),
    dis_esc_trab = if_else(dis3 %in% c("Sí", "Sim", "Yes"), 1,
                           if_else(dis3 %in% c("No", "Não"), 0, 99)),
    dis_esc_trab = na_if(dis_esc_trab, 99),
    dis_public = if_else(dis5 %in% c("Sí", "Sim", "Yes"), 1,
                         if_else(dis5 %in% c("No", "Não"), 0, 99)),
    dis_public = na_if(dis_public, 99),
    
    
    # Left vs. Right
    pol_ideol = case_when(l1 == 1 ~ 5,
                          l1 == 2 ~ 4,
                          l1 == 3 ~ 3,
                          l1 == 4 ~ 2,
                          l1 == 5 ~ 1,
                          
                          l1 == 6 ~ -1,
                          l1 == 7 ~ -2,
                          l1 == 8 ~ -3,
                          l1 == 9 ~ -4,
                          l1 == 10 ~ -5,
    ),
    
    # Life satisfaction 
    life_sat = case_when(ls3 == "Muy satisfecho(a)" ~ 4,
                         ls3 == "Algo satisfecho(a)" ~ 3,
                         ls3 == "Algo insatisfecho(a)" ~ 2,
                         ls3 == "Muy insatisfecho(a)" ~ 1,
                         ls3 == "Very Satisfied" ~ 4,
                         ls3 == "Somewhat Satisfied" ~ 3,
                         ls3 == "Somewhat Dissatisfied" ~ 2,
                         ls3 == "Very Dissatisfied" ~ 1,
                         ),
    
    # Interpersonal trust
    trust = case_when(it1 == "Muy confiable" ~ 4,
                      it1 == "Algo confiable" ~ 3,
                      it1 == "Poco confiable" ~ 2,
                      it1 == "Nada confiable" ~ 1,
                      it1 == "Very Trustworthy" ~ 4,
                      it1 == "Somewhat Trustworthy" ~ 3,
                      it1 == "Not Very Trustworthy" ~ 2,
                      it1 == "Untrustworthy" ~ 1,
    ),
    
    # Satisfaction with democracy
    dem_sat = case_when(pn4 == "Muy satisfecho(a)" ~ 4,
                        pn4 == "Satisfecho(a)" ~ 3,
                        pn4 == "Insatisfecho(a)" ~ 2,
                        pn4 == "Muy insatisfecho(a)" ~ 1,
                        pn4 == "Very Satisfied" ~ 4,
                        pn4 == "Satisfied" ~ 3,
                        pn4 == "Dissatisfied" ~ 2,
                        pn4 == "Very Dissatisfied" ~ 1,
    ),
    
    # Religion
    religion = case_when(q3c == "Católico" ~ "Catholic",
                         q3c == "Protestante, Protestante Tradicional o Protestante no Evangélico" ~ "Protestant",
                         q3c == "Religiones Orientales no Cristianas" ~ "NonChristian Eastern Religion",
                         q3c == "Ninguna (Cree en un Ser Superior pero no pertenece a ninguna religión)" ~ "None",
                         q3c == "Evangélica y Pentecostal" ~ "Evangelical",
                         q3c == "Iglesia de los Santos de los Últimos Días (Mormones)" ~ "Mormon",
                         q3c == "Religiones Tradicionales" ~ "Traditional or Native Religion",
                         q3c == "Judío (Ortodoxo, Conservador o Reformado)" ~ "Jewish",
                         q3c == "Agnóstico o ateo (no cree en Dios)" ~ "Agnostic Atheist",
                         q3c == "Testigos de Jehová" ~ "Jehovahs Witness",
                         q3c == "Otro" ~ "Other",
                         
                         q3c == "Catholic" ~ "Catholic",
                         q3c == "Protestant, Mainline Protestant or Protestant non-Evangelical" ~ "Protestant",
                         q3c == "Non-Christian Eastern Religion" ~ "NonChristian Eastern Religion",
                         q3c == "None (Believes in a Supreme Entity but does not belong to any religion)" ~ "None",
                         q3c == "Evangelical and Protestant" ~ "Evangelical",
                         q3c == "Church of Latter Day Saints (Mormon)" ~ "Mormon",
                         q3c == "Traditional or Native Religion" ~ "Traditional or Native Religion",
                         q3c == "Jewish (Orthodox, Conservative, Reform)" ~ "Jewish",
                         q3c == "Agnostic or Atheist (Does not believe in God)" ~ "Agnostic Atheist",
                         q3c == "Jehovah's Witness" ~ "Jehovahs Witness",
                         q3c == "Other" ~ "Other",
                         
                         q3c == "Hindú" ~ "Hindu",
                         q3c == "Musulmán" ~ "Muslim",
                         q3c == "Espírita Kardecista" ~ "Other",
                         
                         
                         q3cn == "Católico" ~ "Catholic",
                         q3cn == "Protestante, Protestante Tradicional o Protestante no Evangélico" ~ "Protestant",
                         q3cn == "Religiones Orientales no Cristianas" ~ "NonChristian Eastern Religion",
                         q3cn == "Ninguna (Cree en un Ser Superior pero no pertenece a ninguna religión)" ~ "None",
                         q3cn == "Evangélica y Pentecostal" ~ "Evangelical",
                         q3cn == "Iglesia de los Santos de los Últimos Días (Mormones)" ~ "Mormon",
                         q3cn == "Religiones Tradicionales" ~ "Traditional or Native Religion",
                         q3cn == "Judío (Ortodoxo, Conservador o Reformado)" ~ "Jewish",
                         q3cn == "Agnóstico o ateo (no cree en Dios)" ~ "Agnostic Atheist",
                         q3cn == "Testigos de Jehová" ~ "Jehovahs Witness",
                         q3cn == "Otro" ~ "Other",
                         q3cn == "Espírita Kardecista" ~ "Other",
                         
                         q3c == "Iglesia de los Santos de los Últimos Días (Mormones)." ~ "Mormon",
                         q3c == "1" ~ "Catholic",
                         q3c == "2" ~ "Protestant",
                         q3c == "3" ~ "NonChristian Eastern Religion",
                         q3c == "4" ~ "None",
                         q3c == "5" ~ "Evangelical",
                         q3c == "6" ~ "Mormon",
                         q3c == "7" ~ "Traditional or Native Religion",
                         q3c == "8" ~ "Jewish",
                         
                         ),
    
    religion = str_replace_all(religion, " ", "_"),
    religion = if_else(religion == "", "Other", religion)

    
    # Weigths
    # weight1500 = replace_na(weight1500, 1),
    
    # Interviewer ID
    # intid = str_c(countrycode, intid)
    
  )  
  # ) %>% 
  # filter(!is.na(etnia)) %>%
  # filter(!is.na(colorr)) %>%
  # filter(!is.na(colori)) %>%
  # filter(!is.na(incomeppp)) %>%
  # filter(!is.infinite(incomeppp))

# PCA Hosuehold wealth Index by country and wave ----
paises <- 
  c(lapop %>% 
      group_by(countrycode) %>% 
      summarise() %>% 
      mutate(pais = as.character(countrycode)))$countrycode

olas <- 
  c(lapop %>% 
      group_by(year) %>% 
      summarise()%>% 
      mutate(wave = as.character(year)))$year

# Index includes: Television, Fridge, Washing Machine, Microwave, Telephone, Cellphone, 
# Number of cars, Motocycles, Drinking Water at home, Bathroom at home, Computer
dta <- tibble()
for (p in paises) {
  
  foo <- 
    lapop %>% 
    filter(countrycode == p)
  
  for (i in olas) {
    
    foo1 <- 
      foo %>% 
      filter(year == i)
    
    if (dim(foo1)[1] != 0) {
      
      #if (dim(foo2)[1] != 0) {
      
      foo2_1 <- 
        foo1 %>% 
        mutate(autos = if_else(r5 == "One", 1,
                               if_else(r5 == "Two", 2,
                                       if_else(r5 == "Three or more", 3, 0
                                       )))) %>%
        select(idobs, countrycode, year,  wt, ed, incomeppp, autos, r1:r15) %>% 
        mutate_at(vars(r1:r15), funs(if_else(. == "Sí", 1, 0))) %>% 
        select(-r5) %>% 
        drop_na()
      
      if (dim(foo2_1)[1] != 0) {
      
      #pca <- PCA(foo4_1[,-c(1:7)], scale.unit = TRUE, graph = FALSE) #  col.w = foo2$wt,
      pca1 <- prcomp(foo2_1[,-c(1:6)])
      summary(pca1)
      ppca1 <- as_tibble(predict(pca1))
      
      }
      
      foo2_2 <- 
        foo1 %>% 
        mutate(autos = if_else(r5 == "One", 1,
                               if_else(r5 == "Two", 2,
                                       if_else(r5 == "Three or more", 3, 0
                                       )))) %>%
        select(idobs, countrycode, year,  wt, ed, incomeppp, autos, r1:r15) %>% 
        mutate_at(vars(r1:r15), funs(if_else(. == "Sí", 1, 0))) %>% 
        select(-r5) %>% 
        drop_na()
      
      if (dim(foo2_2)[1] != 0) {
        
      #pca2 <- PCA(foo4_2[,-c(1:7)], row.w = foo4_2$wt, scale.unit = TRUE, graph = FALSE) 
      pca2 <- prcomp(foo2_2[,-c(1:5)])
      summary(pca2)
      ppca2 <- as_tibble(predict(pca2))
      
      }
      
      if(dim(foo2_1)[1] != 0 & dim(foo2_2)[1] != 0) {
      
      foo2_1 <- 
        foo2_1 %>% 
        mutate(riq1 = ppca1$PC1,
               cor = cor(riq1, ed),
               riq1 = if_else(cor > 0 , riq1, -riq1),
               riq1 = riq1 - min(riq1, na.rm = TRUE),
               riq1_std = (riq1 - mean(riq1, na.rm = TRUE))/sd(riq1, na.rm = TRUE),
               riq1_unif = (riq1 - min(riq1, na.rm = TRUE))/(max(riq1, na.rm = TRUE) - min(riq1, na.rm = TRUE)),
               qtlriq1 = ntile(riq1_std, 5),
               dclriq1 =  ntile(riq1_std, 10),
               pctriq1 =  ntile(riq1_std, 100),
        ) %>% 
        select(idobs, countrycode, year,  ed, incomeppp, riq1, riq1_std:pctriq1) %>% 
        distinct() %>% 
        group_by(idobs) %>% 
        filter(n() == 1) %>% 
        ungroup()
      
      foo2_2 <-
        foo2_2 %>% 
        mutate(riq2 = ppca2$PC1,
               cor = cor(riq2, ed),
               riq2 = if_else(cor > 0 , riq2, -riq2),
               riq2 = riq2 - min(riq2, na.rm = TRUE),
               riq2_std = (riq2 - mean(riq2, na.rm = TRUE))/sd(riq2, na.rm = TRUE),
               riq2_unif = (riq2 - min(riq2, na.rm = TRUE))/(max(riq2, na.rm = TRUE) - min(riq2, na.rm = TRUE)),
               qtlriq2 = ntile(riq2_std, 5),
               dclriq2 =  ntile(riq2_std, 10),
               pctriq2 =  ntile(riq2_std, 100),
        ) %>% 
        select(idobs, countrycode, year,  ed, incomeppp, riq2, riq2_std:pctriq2) %>% 
        distinct() %>% 
        group_by(idobs) %>% 
        filter(n() == 1) %>% 
        ungroup()
      
      foo4 <- 
        foo2_2 %>% 
        left_join(foo2_1)
      
      dta <-  
        bind_rows(dta, foo4)
      
      }
      
      #}
      #}
    }
  }
}

rm(foo, foo1, foo2_1, foo2_2, foo2_1, foo2_2, foo4, pca1, pca2, ppca1, pcca2)

summary(dta$riq1)
summary(dta$riq2)


dta %>% 
  ggplot(aes(riq1_std)) + geom_density()

dta %>% 
  ggplot(aes(riq2_std)) + geom_density()

dta %>% 
  mutate(riq1 = round(riq1, 2),
         riq2 = round(riq2, 2)
  ) %>% 
  group_by(riq1) %>% 
  summarise(riq2 = mean(riq2, na.rm = TRUE)) %>% 
  ggplot(aes((riq1), log(riq2))) +
  geom_jitter() +
  geom_smooth(method = "lm")


dta %>% 
  mutate(riq1 = round(riq1, 2)) %>% 
  group_by(riq1) %>% 
  summarise(ed = mean(ed, na.rm =TRUE)) %>% 
  ggplot(aes((riq1), ed)) +
  geom_jitter() +
  geom_smooth(method = "lm")

dta %>% 
  mutate(riq2 = round(riq2, 2)) %>% 
  group_by(riq2) %>% 
  summarise(ed = mean(ed, na.rm =TRUE)) %>% 
  ggplot(aes(log(riq2), ed)) +
  geom_jitter() +
  geom_smooth(method = "lm")

dta %>% 
  mutate(incomeppp = round(incomeppp, 2)) %>% 
  group_by(incomeppp) %>% 
  summarise(ed = mean(ed, na.rm =TRUE)) %>% 
  ggplot(aes(log(incomeppp), ed)) +
  geom_jitter() +
  geom_smooth(method = "lm")

dta %>% 
  mutate(incomeppp = round(incomeppp, 2)) %>% 
  group_by(incomeppp) %>% 
  summarise(riq2 = mean(riq2, na.rm =TRUE)) %>% 
  ggplot(aes(log(incomeppp), log(riq2))) +
  geom_jitter() +
  geom_smooth(method = "lm")

dta <- 
  dta %>% 
  group_by(idobs) %>% 
  filter(n() == 1) %>% 
  ungroup()

any(table(dta$idobs)>1)

lapop <- 
  lapop %>% 
  group_by(idobs) %>% 
  filter(n() == 1) %>% 
  ungroup()

lapop <- 
lapop %>% 
  distinct() %>% 
  left_join(dta %>% distinct())

# Ethnic-Race mayorities/minorities ----
# Ethnicity
foo <- 
  lapop %>% 
  group_by(pais, year, etnia) %>%
  count() %>%
  ungroup() 

paises <- c(foo %>% 
              group_by(pais) %>% 
              summarise())$pais
años <- as.numeric(levels(as.factor(foo$year)))
dta <- tibble()

for (i in paises) {
  
  foo1 <- 
    foo %>% 
    filter(pais == i)
  
  for (j in años) {
    
    foo2 <- 
      foo1 %>% 
      filter(year == j)
    
    if (dim(foo2)[1] != 0) {
      
      foo2 <- 
        foo2 %>% 
        mutate(shr_etnia = n/sum(n),
               etnia_major = if_else(shr_etnia == max(shr_etnia), 1, 0)) %>% 
        arrange(-shr_etnia) %>% 
        bind_cols(etnia_rank = seq(1, nrow(foo2))) %>% 
        select(-n)
      
      dta <- 
        bind_rows(dta, foo2)
    }
  }
}

lapop <- left_join(lapop, dta)

rm(dta, foo, foo1, foo2, foo2)

# Race
foo <- 
  lapop %>% 
  group_by(pais, year, colorr) %>%
  count() %>%
  ungroup() 

paises <- c(foo %>% 
              group_by(pais) %>% 
              summarise())$pais
años <- as.numeric(levels(as.factor(foo$year)))
dta <- tibble()

for (i in paises) {
  
  foo1 <- 
    foo %>% 
    filter(pais == i)
  
  for (j in años) {
    
    foo2 <- 
      foo1 %>% 
      filter(year == j)
    
    if (dim(foo2)[1] != 0) {
      
      foo2 <- 
        foo2 %>% 
        mutate(shr_race = n/sum(n),
               race_major = if_else(shr_race == max(shr_race), 1, 0)) %>% 
        arrange(-shr_race) %>% 
        bind_cols(race_rank = seq(1, nrow(foo2))) %>% 
        select(-n)
      
      dta <- 
        bind_rows(dta, foo2)
    }
  }
}

lapop <- left_join(lapop, dta)

rm(dta, foo, foo1, foo2, foo2)


# Race (grouped)
foo <- 
  lapop %>% 
  group_by(pais, year, colorr_fct) %>%
  count() %>%
  ungroup() 

paises <- c(foo %>% 
              group_by(pais) %>% 
              summarise())$pais
años <- as.numeric(levels(as.factor(foo$year)))
dta <- tibble()

for (i in paises) {
  
  foo1 <- 
    foo %>% 
    filter(pais == i)
  
  for (j in años) {
    
    foo2 <- 
      foo1 %>% 
      filter(year == j)
    
    if (dim(foo2)[1] != 0) {
      
      foo2 <- 
        foo2 %>% 
        mutate(shr_race_fct = n/sum(n),
               race_fct_major = if_else(shr_race_fct == max(shr_race_fct), 1, 0)) %>% 
        arrange(-shr_race_fct) %>% 
        bind_cols(racef_fct_rank = seq(1, nrow(foo2))) %>% 
        select(-n)
      
      dta <- 
        bind_rows(dta, foo2)
    }
  }
}

lapop <- left_join(lapop, dta)

rm(dta, foo, foo1, foo2, foo2)

# Top-coding ----

topcode <- function(x, pct  = .999) { 
  x <- as.double(x)
  top <- quantile(x, c(pct), na.rm = TRUE)
  return(if_else(x > top, top, x))
}

summary(lapop$incomeppp, na.rm = TRUE)
summary(topcode(lapop$incomeppp), na.rm = TRUE)


lapop <- 
lapop %>% 
  mutate_at(vars(age, colorr, colori, ed, tam_hog, incomeppp, exper, exper2, exper3), funs(topcode(.)))

# Predict income ----
foo <- 
  lapop %>% 
  filter(year >= 2010) %>%  filter(!is.na(riq1_std)) %>% 
  mutate(autos = if_else(r5 == "One", 1,
                         if_else(r5 == "Two", 2,
                                 if_else(r5 == "Three or more", 3, 0
                                 )))) %>%
  select(idobs, countrycode, country_region, year, incomeppp, autos, r1:r15, weight1500) %>% 
  mutate_at(vars(r1:r15), funs(if_else(. == "Sí", 1, 0))) %>% 
  select(-r5, -r8) %>% 
  drop_na() %>% 
  #mutate(incomeppp = log(1 + incomeppp)) %>% 
  fastDummies::dummy_cols(select_columns = c( "country_region", "year"), 
                          remove_first_dummy = TRUE,
                          remove_selected_columns = TRUE) 

# Put 1/2 of the data into the training set 
set.seed(1234)
data_split <- initial_split(foo, prop = 1/2)

# Create data frames for the two sets:
train_data <- training(data_split) %>% select(-idobs, -countrycode)
test_data  <- testing(data_split) %>% select(-idobs, -countrycode)

X1 <- train_data %>% select(-incomeppp)
X2 <- test_data %>% select(-incomeppp)
# data.frame(X, X*train_data$year)
set.seed(1234)
sl_lm_all <- SuperLearner(Y = train_data$incomeppp,
                          X = data.frame(X1),
                          newX = data.frame(X2),
                          family = gaussian(),
                          SL.library = c("SL.lm"), #
                          cvControl = list(V=5),
                          verbose = TRUE)

# sl <- SuperLearner(Y = train_data$incomeppp,
#                         X = data.frame(X), 
#                         family = gaussian(),
#                         SL.library = "SL.xgboost", #
#                         cvControl = list(V=5))

test_pred <- predict(sl_lm_all, test_data %>% select(-incomeppp), onlySL = T)
train_pred <- predict(sl_lm_all, train_data %>% select(-incomeppp), onlySL = T)

training(data_split) %>% 
  mutate(incomeppp_pred = train_pred$pred) %>% 
  select(idobs, countrycode, incomeppp, incomeppp_pred) %>% 
  ggplot(aes(log(incomeppp + 1), log(1 + incomeppp_pred))) + geom_point(alpha =.2)

testing(data_split) %>% 
  mutate(incomeppp_pred = test_pred$pred) %>% 
  select(idobs, countrycode, incomeppp, incomeppp_pred) %>% 
  ggplot(aes(log(incomeppp + 1), log(1 + incomeppp_pred))) + geom_point(alpha =.2)

lapop <- 
  lapop %>% 
  left_join(
    training(data_split) %>% 
      mutate(incomeppp_pred = train_pred$pred[,1],
             incomeppp_res = incomeppp - incomeppp_pred
      ) %>% 
      select(idobs, countrycode, incomeppp, incomeppp_pred, incomeppp_res) %>% 
      bind_rows(
        testing(data_split) %>% 
          mutate(incomeppp_pred = test_pred$pred[,1],
                 incomeppp_res = incomeppp - incomeppp_pred
          ) %>% 
          select(idobs, countrycode, incomeppp, incomeppp_pred, incomeppp_res)
      )
  )



# Final adjustments ----
lapop <- 
  lapop %>% 
  filter(year >= 2010) %>% 
  filter(!is.na(age)) %>% 
  filter(!is.na(upm)) %>% 
  mutate(age2 = age^2,
         ocupation = if_else(ocupation == "Retired, pensioner or permanently disabled to work", "Retired", ocupation),
         incomeppp = log(incomeppp),
         incomeppp_pred = if_else(incomeppp_pred < 0, 0, incomeppp_pred),
         incomeppp_pred = log(incomeppp_pred),
         incomeppp_res = incomeppp - incomeppp_pred,
         etnia = if_else(countrycode == "BRA" & etnia == "Mestiza", "Mulata", as.character(etnia)),
         region = if_else(region == "Central_America", "North_and_Central_America", region)
  ) %>% 
  filter(!(countrycode %in% c("DMA", "GRD", "KNA", "LCA", "VCT")))

# Sample selection ----
lapop <- 
  lapop %>% 
  mutate(income_not_na = if_else(is.na(incomeppp) | incomeppp <= 0, 0, 1))

sselect <- glm(income_not_na ~ sex + age + age2 + ed + trust +
                 localidad + ocupation + edocivil + religion +
                 sexi + country_region + year
               , data = lapop, weights = lapop$weight1500b,
               family = binomial(link = "probit"))
lapop <- 
  lapop %>% 
  drop_na(any_of(c("sex", "age", "age2", "ed", "localidad", "ocupation", "edocivil", "sexi", "country_region", "year", "religion", "trust"))) %>% 
  mutate(IMR = sampleSelection::invMillsRatio(sselect)$IMR1) %>% 
  glimpse()

#
# Normalizing years of schooling by country and year ----
dta <- tibble()
for (c in levels(factor(lapop$countrycode))) {
  
  foo <- 
    lapop %>% 
    filter(year >= 2010) %>% 
    filter(countrycode == c) 
  
  for(y in as.numeric(levels(factor(foo$year)))){
    
    print(str_c(c,y))
    
    foo1 <- 
      foo %>% 
      filter(year == y) %>% 
      mutate(ed_z = scale(ed)[,1]) %>% 
      select(idobs, countrycode, year, ed_z)
    
    dta <- 
      dta %>% 
      bind_rows(foo1)
    
  }
  
}

lapop <- 
  lapop %>% 
  left_join(dta) 

rm(dta, foo, foo1)
#

# Normalizing skin tone by country and year ----
dta <- tibble()
for (c in levels(factor(lapop$countrycode))) {
  
  foo <- 
    lapop %>% 
    filter(year >= 2010) %>% 
    filter(countrycode == c) 
  
  for(y in as.numeric(levels(factor(foo$year)))){
    
    print(str_c(c,y))
    
    foo1 <- 
      foo %>% 
      filter(year == y) %>% 
      mutate(colorr_z = scale(colorr)[,1]) %>% 
      select(idobs, countrycode, year, colorr_z)
    
    dta <- 
      dta %>% 
      bind_rows(foo1)
    
  }
  
}

lapop <- 
  lapop %>% 
  left_join(dta) 

rm(dta, foo, foo1)
#


# Export database ----

setwd("~/Documents/Tesis/Tesis PSE/Datos")
write_csv(lapop, "lapop.csv")
haven::write_dta(lapop, "lapop.dta")

